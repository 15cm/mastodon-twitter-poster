require: rubocop-performance
AllCops:
  TargetRubyVersion: 2.6
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  Exclude:
    - '**/templates/**/*'
    - '**/vendor/**/*'
    - '**/vendor/**/.*'
    - '**/node_modules/**/*'
    # Additional exclude files by rubocop-rails_config
    - 'db/migrate/**/*.rb'
    - 'db/*.rb'

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Layout/EndAlignment:
  EnforcedStyleAlignWith: variable

# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

Style/FrozenStringLiteralComment:
  EnforcedStyle: always

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/RedundantReturn:
  AllowMultipleReturnValues: true

Style/Semicolon:
  AllowAsExpressionSeparator: true

Layout/LineLength:
  Enabled: false

Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true
Style/NilLambda: # (new in 1.3)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true
